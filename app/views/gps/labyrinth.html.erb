<h1 id="labhead">Labyrinth</h1>
<body id="mapbod">

<canvas id="myCanvas" width="606" height="606">
</canvas>

 <body>   

	    
		<button class = "arrow-up" type="button" onclick ="setUp()"></button>
		 <p>
		 <button class = "arrow-left" type="button" onclick ="setLeft()"></button>

		 <button class = "arrow-right" type="button" onclick ="setRight()"></button>
		 </p>
		<button class = "arrow-down" type="button" onclick ="setDown()"></button>
  
<script>
var laold = 0;
var loold = 0;
var x = 60;
var y = 0;
var lacur = 0;
var locur = 0;
var counter = 0;
var counter1 = 0;
var dir = 'down';

 var la = document.querySelector('#lat');
  var lo = document.querySelector('#long');
  function setLeft()
  {
	dir = 'left';
  }
    function setRight()
  {
	dir = 'right';
  }
    function setUp()
  {
	dir = 'up';
  }
    function setDown()
  {
	dir = 'down';
  }
function success(position) {
  
  

	  if(laold != lacur)
	  {
	    var col;
		ctx.moveTo(x,y);
		switch(dir)
		{
			case 'left':
			    col = checkcollision(x - 1, y)
				if(col == 0)
				{
					ctx.lineTo(x - 1,y);
					counter += 1;
					x -= 1;
				}
				break;
			case 'right':
				col = checkcollision(x + 1, y)
				if(col == 0)
				{
				ctx.lineTo(x + 1,y);
				counter += 1;
					x += 1;
				}
				break;
			case 'up':
				col = checkcollision(x, y - 1)
				if(col == 0)
				{
				ctx.lineTo(x,y - 1);
				counter += 1;
					y -= 1;
				}
				break;
			case 'down':
				col = checkcollision(x, y + 10)
				if(col == 0)
				{
				 ctx.lineTo(x,y + 10);
				 //ctx.fillRect(x,y + 5, 24,2);
					counter += 1;
					y += 1;
				}
				break;
			default: break;
		}
		

	
	ctx.stroke();
	laold = position.coords.latitude;
	loold = position.coords.longitude;
  }
  //.toFixed(2);


  lacur = position.coords.latitude;
  locur = position.coords.longitude;
  //navigator.geolocation.clearWatch(watchid);
  navigator.geolocation.getCurrentPosition(success, error, {'enableHighAccuracy':true, 'maximumAge': 100});
}
function error(msg) {
	lo.innterHTML = 'error';
  
  // console.log(arguments);
}
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(success, error, {'enableHighAccuracy':true, 'maximumAge': 1000});
} else {
  error('not supported');
}
function checkcollision(checkx, checky){
        var collision = 0;
        var imgd = ctx.getImageData(checkx, checky, 5, 5);
        var pix = imgd.data;
        for (var i = 0; i < (10 * 10) * 4; i += 1){
            if (pix[i] == 255) {
                collision = 1;
				}
        }
        //console.log("colision fromn the function: "+collision);
        return collision;
    }
var c = document.getElementById("myCanvas");
var ctx = c.getContext("2d");
var img = new Image();
img.src = "<%= image_path("easyLab2.png") %>";
 
img.onload = function()
{
 ctx.drawImage(img,0,0);
 //ctx.fillStyle = "red";
 ctx.strokeStyle = "red";
};
</script>
<body/>